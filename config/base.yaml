properties:
  # Postgres config
  postgresqlUser:
    default: postgres
    envVar: POSTGRESQL_USER
  postgresqlPassword:
    default: null
    envVar: POSTGRESQL_PASSWORD
  postgresqlDatabase:
    default: postgres
    envVar: POSTGRESQL_DATABASE
  postgresqlHost:
    default: localhost
    envVar: POSTGRESQL_HOST

  urlPrefix:
    default: '/pl'
  redisUrl:
    default: null # redis://localhost:6379/ for dev
  rabbitMqHost:
    default: 'amqp://localhost'
    envVar: RABBITMQ_HOST
  logFilename:
    default: 'server.log'
  authType:
    default: none
  serverType:
    default: http
  serverPort:
    default: 3000
  cronIntervalAutoFinishExamsSec:
    default: 600 # 10 * 60
  cronIntervalErrorAbandonedJobsSec:
    default: 600 # 10 * 60
  cronIntervalExternalGraderLoadSec:
    default: 8
  cronIntervalServerLoadSec:
    default: 8
  cronIntervalServerUsageSec:
    default: 8
  cronDailySec:
    default: 2880 # 8 * 60 * 60
  autoFinishAgeMins:
    default: 360 # 6 hours
  questionDefaultsDir:
    default: 'question-servers/default-calculation'
  secretKey:
    default: THIS_IS_THE_SECRET_KEY # override
  secretSlackOpsBotEndpoint:
    default: null # override

  groupName:
    default: 'local' # used for load reporting
  instanceId:
    default: 'server' # FIXME: needs to be determed dynamically with new config code
  reportIntervalSec:
    default: 10 # load reporting
  maxResponseTimeSec:
    default: 600
  serverLoadAverageIntervalSec:
    default: 30
  serverUsageIntervalSec:
    default: 10
  PLpeekUrl:
    default: 'https://cbtf.engr.illinois.edu/sched/proctor/plpeek'
  blockedWarnEnable:
    default: false
    envVar: BLOCKED_WARN_ENABLE
  blockedWarnThresholdMS:
    default: 100
    envVar: BLOCKED_WARN_THRESHOLD_MS
  SEBServerUrl:
    default: null
  SEBServerFilter:
    default: null
  SEBDownloadUrl:
    default: null
  hasShib:
    default: false
  hasAzure:
    default: false
  hasOauth:
    default: false
  syncExamIdAccessRules:
    default: false

  ##############################
  # EXTERNAL GRADING CONFIG
  ##############################
  # Whether external grading is enabled. Defaults to false to handle the
  # average case where someone is running PrairieLearn without a connection to
  # an instance of PrairieGrader
  externalGradingEnabled:
    default: false
    envVar: EXTERNAL_GRADING_ENABLED

  # What type of queue to use
  # One of: sqs, rabbitmq
  externalGradingQueueType:
    default: sqs
    envVar: EXTERNAL_GRADING_QUEUE_TYPE

  # Where to send files for submitted external grading jobs
  # One of: s3, disk
  externalGradingFileStoreType:
    default: s3
    envVar: EXTERNAL_GRADING_FILE_STORE_TYPE

  # Where to write files to, if externalGradingFileStoreType is 'disk'
  externalGradingFileStorePath:
    default: '/jobs'
    envVar: EXTERNAL_GRADING_FILE_STORE_PATH

  externalGradingQueueName:
    default: grading
    envVar: EXTERNAL_GRADING_QUEUE_NAME

  externalGradingAutoScalingGroupName:
    default: null
    envVar: EXTERNAL_GRADING_AUTOSCALING_GROUP_NAME

  externalGradingS3Bucket:
    default: 'prairielearn.dev.grading'

  externalGradingWebhookUrl:
    default: null

  externalGradingDefaultTimeout:
    default: 30 # Seconds

  externalGradingLoadAverageIntervalSec:
    default: 30

  externalGradingHistoryLoadIntervalSec:
    default: 3600

  externalGradingCurrentCapacityFactor:
    default: 1.5

  externalGradingHistoryCapacityFactor:
    default: 1.5

  externalGradingSecondsPerSubmissionPerUser:
    default: 120


  ##################
  # AZURE CONFIG
  ##################

  # Required
  azureIdentityMetadata:
    default: 'https://login.microsoftonline.com/common/.well-known/openid-configuration'
  # azureIdentityMetadata: \'https://login.microsoftonline.com/<tenant_name>.onmicrosoft.com/.well-known/openid-configuration',
  # or equivalently: 'https://login.microsoftonline.com/<tenant_guid>/.well-known/openid-configuration'
  #
  # or you can use the common endpoint
  # 'https://login.microsoftonline.com/common/.well-known/openid-configuration'
  # To use the common endpoint, you have to either set `validateIssuer` to false, or provide the `issuer` value.

  # Required, the client ID of your app in AAD
  azureClientID:
    default: '<your_client_id>'

  # Required, must be 'code', 'code id_token', 'id_token code' or 'id_token'
  azureResponseType:
    default: 'code id_token'

  # Required
  azureResponseMode:
    default: 'form_post'

  # Required, the reply URL registered in AAD for your app
  azureRedirectUrl:
    default: 'http://localhost:3000/auth/openid/return'

  # Required if we use http for redirectUrl
  azureAllowHttpForRedirectUrl:
    default: false

  # Required if `responseType` is 'code', 'id_token code' or 'code id_token'.
  # If app key contains '\', replace it with '\\'.
  azureClientSecret:
    default: '<your_client_secret>'

  # Required to set to false if you don't want to validate issuer
  azureValidateIssuer:
    default: false

  # Required if you want to provide the issuer(s) you want to validate instead of using the issuer from metadata
  azureIssuer:
    default: null

  # Required to set to true if the `verify` function has 'req' as the first parameter
  azurePassReqToCallback:
    default: false

  # Recommended to set to true. By default we save state in express session, if this option is set to true, then
  # we encrypt state and save it in cookie instead. This option together with { session: false } allows your app
  # to be completely express session free.
  azureUseCookieInsteadOfSession:
    default: true

  # Required if `useCookieInsteadOfSession` is set to true. You can provide multiple set of key/iv pairs for key
  # rollover purpose. We always use the first set of key/iv pair to encrypt cookie, but we will try every set of
  # key/iv pair to decrypt cookie. Key can be any string of length 32, and iv can be any string of length 12.
  azureCookieEncryptionKeys:
    default:
      - key: '12345678901234567890123456789012'
        iv: '123456789012'
      - key': 'abcdefghijklmnopqrstuvwxyzabcdef'
        iv: 'abcdefghijkl'

  # Optional. The additional scope you want besides 'openid', for example: ['email', 'profile'].
  azureScope:
    default: null

  # Optional, 'error', 'warn' or 'info'
  azureLoggingLevel:
    default: 'warn'

  # Optional. The lifetime of nonce in session or cookie, the default value is 3600 (seconds).
  azureNonceLifetime:
    default: null

  # Optional. The max amount of nonce saved in session or cookie, the default value is 10.
  azureNonceMaxAmount:
    default: 5

  # Optional. The clock skew allowed in token validation, the default value is 300 seconds.
  azureClockSkew:
    default: null

  # Optional.
  # If you want to get access_token for a specific resource, you can provide the resource here; otherwise,
  # set the value to null.
  # Note that in order to get access_token, the responseType must be 'code', 'code id_token' or 'id_token code'.
  azureResourceURL:
    default: 'https://graph.windows.net'

  # The url you need to go to destroy the session with AAD
  azureDestroySessionUrl:
    default: 'https://login.microsoftonline.com/common/oauth2/logout?post_logout_redirect_uri=http://localhost:3000'
